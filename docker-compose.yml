services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task_distribution_system_app
    restart: always
    depends_on:
      - db
      - redis
    volumes:
      - .:/task_distribution_system
    ports:
      - "8000:8000"
    command: [ "python", "manage.py", "runserver", "0.0.0.0:8000" ]

  db:
    image: postgres:13
    container_name: task_distribution_system_db
    restart: always
    environment:
      POSTGRES_DB: task_db
      POSTGRES_USER: task_user
      POSTGRES_PASSWORD: task_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: task_distribution_system_redis_cache
    restart: always
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task_distribution_system_celery_worker
    restart: always
    depends_on:
      - db
      - redis
    volumes:
      - .:/task_distribution_system
    command: ["celery", "-A", "task_distribution_system", "worker", "--loglevel=info"]

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task_distribution_system_celery_beat
    restart: always
    depends_on:
      - db
      - redis
      - celery
    volumes:
      - .:/task_distribution_system
    command: [ "celery", "-A", "task_distribution_system", "beat", "--loglevel=info" ]

volumes:
  postgres_data: